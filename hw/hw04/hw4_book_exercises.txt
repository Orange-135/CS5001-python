1. In Listing 5.4 (addnonnegatives.py) could the condition of the if statement have used > instead of
>= and achieved the same results? Why?

Yes, Besacuse 0 plus every positive integer is the positive integer itslef, the result will not be influenced even if 0 cannot enter if loop.


2. In Listing 5.4 (addnonnegatives.py) could the condition of the while statement have used > instead
of >= and achieved the same results? Why?

No, because the intitial enter is 0, while loop cannot be utilized when using > instead of >=


3. In Listing 5.4 (addnonnegatives.py) what would happen if the statement
entry = int(input()) # Get the value
were moved out of the loop? Is moving the assignment out of the loop a good or bad thing to do?
Why?

It is a bad thing, because the loop will be infinity and the result will always be zero.


4. How many asterisks does the following code fragment print?
a = 0
while a < 100:
print('*', end='')
a += 1
print()

100

5. How many asterisks does the following code fragment print?
a = 0
while a < 100:
print('*', end='')
print()

Infinitely


13. Provide the exact sequence of integers specified by each of the following range expressions.
(a) range(5)
[0, 1, 2, 3, 4]

(b) range(5, 10)
[5, 6, 7, 8, 9]

(c) range(5, 20, 3)
[5, 8, 11, 14, 17]
(d) range(20, 5, -1)
[20, 19, 18, 17, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6]

(e) range(20, 5, -3)
[20, 17, 14, 11, 8]

(f) range(10, 5)
none

(g) range(0)
[0]

(h) range(10, 101, 10)
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

(i) range(10, -1, -1)
[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]

(j) range(-3, 4)
[-3, -2, -1, 0, 1, 2, 3]

(k) range(0, 10, 1)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]